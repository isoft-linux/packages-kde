With virtual trash enabled, file with Type=Link and URL=trash:/ should be treated as normal desktop file.
And no more specitial treatment codes needed.
diff -Nur plasma-desktop-5.4.3/containments/desktop/plugins/folder/foldermodel.cpp plasma-desktop-5.4.3.new/containments/desktop/plugins/folder/foldermodel.cpp
--- plasma-desktop-5.4.3/containments/desktop/plugins/folder/foldermodel.cpp	2015-12-23 19:30:04.469065392 +0800
+++ plasma-desktop-5.4.3.new/containments/desktop/plugins/folder/foldermodel.cpp	2015-12-23 19:26:10.258054804 +0800
@@ -1199,7 +1199,6 @@
     } else {
         KFileItemList items;
         bool hasRemoteFiles = false;
-        bool isTrashLink = false;
 
         foreach (const QModelIndex &index, indexes) {
             KFileItem item = itemForIndex(index);
@@ -1209,14 +1208,6 @@
             }
         }
 
-        // Check if we're showing the menu for the trash link
-        if (items.count() == 1 && items.at(0).isDesktopFile()) {
-            KDesktopFile file(items.at(0).localPath());
-            if (file.readType() == "Link" && file.readUrl() == "trash:/") {
-                isTrashLink = true;
-            }
-        }
-
         QList<QAction*> editActions;
         editActions.append(m_actionCollection.action("rename"));
 
@@ -1225,13 +1216,12 @@
         bool showDeleteCommand = cg.readEntry("ShowDeleteCommand", false);
 
         // Don't add the "Move to Trash" action if we're showing the menu for the trash link
-        if (!isTrashLink) {
-            if (!hasRemoteFiles) {
-                editActions.append(m_actionCollection.action("trash"));
-            } else {
-                showDeleteCommand = true;
-            }
+        if (!hasRemoteFiles) {
+            editActions.append(m_actionCollection.action("trash"));
+        } else {
+            showDeleteCommand = true;
         }
+
         if (showDeleteCommand) {
             editActions.append(m_actionCollection.action("del"));
         }
diff -Nur plasma-desktop-5.4.3/containments/desktop/plugins/folder/internallibkonq/konq_popupmenu.cpp plasma-desktop-5.4.3.new/containments/desktop/plugins/folder/internallibkonq/konq_popupmenu.cpp
--- plasma-desktop-5.4.3/containments/desktop/plugins/folder/internallibkonq/konq_popupmenu.cpp	2015-12-23 19:30:04.468065392 +0800
+++ plasma-desktop-5.4.3.new/containments/desktop/plugins/folder/internallibkonq/konq_popupmenu.cpp	2015-12-23 19:18:54.613035109 +0800
@@ -191,7 +191,6 @@
 
     QUrl url = m_sViewURL.adjusted(QUrl::NormalizePathSegments);
 
-    bool isTrashLink     = false;
     bool isCurrentTrash = false;
     bool currentDir     = false;
     bool isSymLink = false;
@@ -209,19 +208,9 @@
         //kDebug(1203) << "View path is " << url.url();
         //kDebug(1203) << "First popup path is " << firstPopupURL.url();
         currentDir = (firstPopupURL.matches(url, QUrl::StripTrailingSlash));
-        if ( firstPopupItem.isDesktopFile() ) {
-            KDesktopFile desktopFile( firstPopupItem.localPath() );
-            const KConfigGroup cfg = desktopFile.desktopGroup();
-            isTrashLink = ( cfg.readEntry("Type") == "Link" && cfg.readEntry("URL") == "trash:/" );
-        }
-
-        if (isTrashLink) {
-            sDeleting = false;
-        }
 
         // isCurrentTrash: popup on trash:/ itself, or on the trash.desktop link
-        isCurrentTrash = (firstPopupURL.scheme() == "trash" && firstPopupURL.path().length() <= 1)
-                         || isTrashLink;
+        isCurrentTrash = (firstPopupURL.scheme() == "trash" && firstPopupURL.path().length() <= 1);
     }
 
     const bool isIntoTrash = (url.scheme() == "trash") && !isCurrentTrash; // trashed file, not trash:/ itself
