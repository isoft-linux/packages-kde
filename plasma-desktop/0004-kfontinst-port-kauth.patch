diff --git a/kcms/kfontinst/dbus/FontInst.cpp b/kcms/kfontinst/dbus/FontInst.cpp
index 7f98c37..c52248f 100644
--- a/kcms/kfontinst/dbus/FontInst.cpp
+++ b/kcms/kfontinst/dbus/FontInst.cpp
@@ -954,11 +954,11 @@ int FontInst::performAction(const QVariantMap &args)
     itsConnectionsTimer->stop();
 
     KAuth::ExecuteJob* j = action.execute();
-    j->exec();
-    if (j->error()) {
-        qWarning() << "kauth action failed" <<  j->errorString() << j->errorText();
-        //error is a KAuth::ActionReply::Error rest of this code expects KIO error codes which are extended by EStatus
-        switch (j->error()) {
+    connect(j, &KJob::result, [=](KJob *j){
+        if (j->error()) {
+            qWarning() << "kauth action failed" <<  j->errorString() << j->errorText();
+            //error is a KAuth::ActionReply::Error rest of this code expects KIO error codes which are extended by EStatus
+            switch (j->error()) {
             case KAuth::ActionReply::Error::UserCancelledError:
                 return KIO::ERR_USER_CANCELED;
             case KAuth::ActionReply::Error::AuthorizationDeniedError:
@@ -967,11 +967,14 @@ int FontInst::performAction(const QVariantMap &args)
                 return KIO::ERR_COULD_NOT_AUTHENTICATE;
             default:
                 return KIO::ERR_INTERNAL;
+            }
+            return KIO::ERR_INTERNAL;
         }
-        return KIO::ERR_INTERNAL;
-    }
+        return (KIO::Error)STATUS_OK;
+    });
+    j->start();
     KFI_DBUG << "Success!";
     return STATUS_OK;
 }
 
-}
\ No newline at end of file
+}
