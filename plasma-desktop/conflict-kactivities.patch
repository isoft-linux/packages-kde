diff --git a/CMakeLists.txt b/CMakeLists.txt
index dfd7822..9c849ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -48,6 +48,7 @@ find_package(KF5 ${KF5_MIN_VERSION} REQUIRED COMPONENTS
     Declarative
     People
     DBusAddons
+    ActivitiesStats
 )
 
 find_package(LibKWorkspace CONFIG REQUIRED)
diff --git a/applets/kicker/CMakeLists.txt b/applets/kicker/CMakeLists.txt
index 6aa9d8d..2e112e4 100644
--- a/applets/kicker/CMakeLists.txt
+++ b/applets/kicker/CMakeLists.txt
@@ -63,7 +63,7 @@ target_link_libraries(kickerplugin
                       Qt5::Quick
                       Qt5::X11Extras
                       KF5::Activities
-                      KF5::ActivitiesExperimentalStats
+                      KF5::ActivitiesStats
                       KF5::ConfigCore
                       KF5::CoreAddons
                       KF5::I18n
diff --git a/applets/kicker/package/contents/ui/CompactRepresentation.qml b/applets/kicker/package/contents/ui/CompactRepresentation.qml
index 6d84b14..ed4c4e5 100644
--- a/applets/kicker/package/contents/ui/CompactRepresentation.qml
+++ b/applets/kicker/package/contents/ui/CompactRepresentation.qml
@@ -103,7 +103,7 @@ Item {
             }
         }
 
-        visible: plasmoid.configuration.useCustomButtonImage && plasmoid.configuration.customButtonImage
+        visible: plasmoid.configuration.useCustomButtonImage && (plasmoid.configuration.customButtonImage != "")
         source: plasmoid.configuration.customButtonImage
         fillMode: Image.PreserveAspectFit
         smooth: true
diff --git a/applets/kicker/plugin/actionlist.cpp b/applets/kicker/plugin/actionlist.cpp
index 57f2a2c..2aa97d9 100644
--- a/applets/kicker/plugin/actionlist.cpp
+++ b/applets/kicker/plugin/actionlist.cpp
@@ -27,13 +27,13 @@
 #include <KPropertiesDialog>
 #include <KRun>
 
-#include <KActivitiesExperimentalStats/Cleaning>
-#include <KActivitiesExperimentalStats/ResultSet>
-#include <KActivitiesExperimentalStats/Terms>
+#include <KActivities/Stats/Cleaning>
+#include <KActivities/Stats/ResultSet>
+#include <KActivities/Stats/Terms>
 
 #include "containmentinterface.h"
 
-namespace KAStats = KActivities::Experimental::Stats;
+namespace KAStats = KActivities::Stats;
 
 using namespace KAStats;
 using namespace KAStats::Terms;
diff --git a/applets/kicker/plugin/recentcontactsmodel.cpp b/applets/kicker/plugin/recentcontactsmodel.cpp
index 182b7d0..1d2c9f5 100644
--- a/applets/kicker/plugin/recentcontactsmodel.cpp
+++ b/applets/kicker/plugin/recentcontactsmodel.cpp
@@ -26,14 +26,14 @@
 
 #include <KLocalizedString>
 
-#include <KActivitiesExperimentalStats/ResultModel>
-#include <KActivitiesExperimentalStats/Terms>
+#include <KActivities/Stats/ResultModel>
+#include <KActivities/Stats/Terms>
 
 #include <kpeople/widgets/actions.h> //FIXME TODO: Pretty include in KPeople broken.
 #include <kpeople/widgets/persondetailsdialog.h>
 #include <KPeople/PersonData>
 
-namespace KAStats = KActivities::Experimental::Stats;
+namespace KAStats = KActivities::Stats;
 
 using namespace KAStats;
 using namespace KAStats::Terms;
diff --git a/applets/kicker/plugin/recentusagemodel.cpp b/applets/kicker/plugin/recentusagemodel.cpp
index d6fe840..85fd607 100644
--- a/applets/kicker/plugin/recentusagemodel.cpp
+++ b/applets/kicker/plugin/recentusagemodel.cpp
@@ -37,11 +37,11 @@
 #include <KService>
 #include <KStartupInfo>
 
-#include <KActivitiesExperimentalStats/Cleaning>
-#include <KActivitiesExperimentalStats/ResultModel>
-#include <KActivitiesExperimentalStats/Terms>
+#include <KActivities/Stats/Cleaning>
+#include <KActivities/Stats/ResultModel>
+#include <KActivities/Stats/Terms>
 
-namespace KAStats = KActivities::Experimental::Stats;
+namespace KAStats = KActivities::Stats;
 
 using namespace KAStats;
 using namespace KAStats::Terms;
diff --git a/applets/kicker/plugin/runnermodel.cpp b/applets/kicker/plugin/runnermodel.cpp
index 732d047..88b3670 100644
--- a/applets/kicker/plugin/runnermodel.cpp
+++ b/applets/kicker/plugin/runnermodel.cpp
@@ -261,6 +261,7 @@ void RunnerModel::matchesChanged(const QList<Plasma::QueryMatch> &matches)
             m_models.removeAt(row);
             delete matchesModel;
             endRemoveRows();
+            emit countChanged();
         } else {
             matchesModel->setMatches(matches);
         }
