diff --git a/eglonxbackend.cpp b/eglonxbackend.cpp
index 314bfb2..d6b4535 100644
--- a/eglonxbackend.cpp
+++ b/eglonxbackend.cpp
@@ -68,12 +68,19 @@ EglOnXBackend::EglOnXBackend(xcb_connection_t *connection, Display *display, xcb
     setIsDirectRendering(true);
 }
 
+static bool gs_tripleBufferUndetected = true;
+static bool gs_tripleBufferNeedsDetection = false;
+
 EglOnXBackend::~EglOnXBackend()
 {
     if (isFailed() && m_overlayWindow) {
         m_overlayWindow->destroy();
     }
     cleanup();
+
+    gs_tripleBufferUndetected = true;
+    gs_tripleBufferNeedsDetection = false;
+
     if (m_overlayWindow) {
         if (overlayWindow()->window()) {
             overlayWindow()->destroy();
@@ -82,9 +89,6 @@ EglOnXBackend::~EglOnXBackend()
     }
 }
 
-static bool gs_tripleBufferUndetected = true;
-static bool gs_tripleBufferNeedsDetection = false;
-
 void EglOnXBackend::init()
 {
     if (!initRenderingContext()) {
@@ -347,6 +351,7 @@ void EglOnXBackend::present()
                     if (qstrcmp(qgetenv("__GL_YIELD"), "USLEEP")) {
                         options->setGlPreferBufferSwap(0);
                         eglSwapInterval(eglDisplay(), 0);
+                        result = 0; // hint proper behavior
                         qCWarning(KWIN_CORE) << "\nIt seems you are using the nvidia driver without triple buffering\n"
                                           "You must export __GL_YIELD=\"USLEEP\" to prevent large CPU overhead on synced swaps\n"
                                           "Preferably, enable the TripleBuffer Option in the xorg.conf Device\n"
diff --git a/glxbackend.cpp b/glxbackend.cpp
index 0abb1e3..924b010 100644
--- a/glxbackend.cpp
+++ b/glxbackend.cpp
@@ -119,6 +119,9 @@ GlxBackend::GlxBackend()
     init();
 }
 
+static bool gs_tripleBufferUndetected = true;
+static bool gs_tripleBufferNeedsDetection = false;
+
 GlxBackend::~GlxBackend()
 {
     if (isFailed()) {
@@ -129,6 +132,9 @@ GlxBackend::~GlxBackend()
     cleanupGL();
     doneCurrent();
 
+    gs_tripleBufferUndetected = true;
+    gs_tripleBufferNeedsDetection = false;
+
     if (ctx)
         glXDestroyContext(display(), ctx);
 
@@ -142,9 +148,6 @@ GlxBackend::~GlxBackend()
     delete m_overlayWindow;
 }
 
-static bool gs_tripleBufferUndetected = true;
-static bool gs_tripleBufferNeedsDetection = false;
-
 void GlxBackend::init()
 {
     initGLX();
@@ -638,6 +641,7 @@ void GlxBackend::present()
                         if (qstrcmp(qgetenv("__GL_YIELD"), "USLEEP")) {
                             options->setGlPreferBufferSwap(0);
                             setSwapInterval(0);
+                            result = 0; // hint proper behavior
                             qCWarning(KWIN_CORE) << "\nIt seems you are using the nvidia driver without triple buffering\n"
                                               "You must export __GL_YIELD=\"USLEEP\" to prevent large CPU overhead on synced swaps\n"
                                               "Preferably, enable the TripleBuffer Option in the xorg.conf Device\n"
@@ -647,6 +651,10 @@ void GlxBackend::present()
                     }
                     setBlocksForRetrace(result == 'd');
                 }
+            } else if (blocksForRetrace()) {
+                // at least the nvidia blob manages to swap async, ie. return immediately on double
+                // buffering - what messes our timing calculation and leads to laggy behavior #346275
+                glXWaitGL();
             }
         } else {
             waitSync();
