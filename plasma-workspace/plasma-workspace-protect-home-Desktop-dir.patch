diff -Nur plasma-workspace-5.4.2n/kioslave/desktop/CMakeLists.txt plasma-workspace-5.4.2/kioslave/desktop/CMakeLists.txt
--- plasma-workspace-5.4.2n/kioslave/desktop/CMakeLists.txt	2015-10-14 14:20:25.981049670 +0800
+++ plasma-workspace-5.4.2/kioslave/desktop/CMakeLists.txt	2015-10-14 14:37:56.580904776 +0800
@@ -21,6 +21,5 @@
 install( FILES desktopnotifier.desktop  DESTINATION  ${SERVICES_INSTALL_DIR}/kded )
 install( FILES desktop.protocol  DESTINATION  ${SERVICES_INSTALL_DIR} )
 
-install(FILES directory.desktop directory.trash DESTINATION ${DATA_INSTALL_DIR}/kio_desktop)
-install(FILES Home.desktop DESTINATION ${DATA_INSTALL_DIR}/kio_desktop/DesktopLinks)
+install(FILES directory.desktop directory.trash Home.desktop DESTINATION ${DATA_INSTALL_DIR}/kio_desktop)
 
diff -Nur plasma-workspace-5.4.2n/kioslave/desktop/kio_desktop.cpp plasma-workspace-5.4.2/kioslave/desktop/kio_desktop.cpp
--- plasma-workspace-5.4.2n/kioslave/desktop/kio_desktop.cpp	2015-10-14 14:20:25.981049670 +0800
+++ plasma-workspace-5.4.2/kioslave/desktop/kio_desktop.cpp	2015-10-14 15:00:36.114474935 +0800
@@ -36,6 +36,7 @@
 #include <QDesktopServices>
 #include <QDir>
 #include <QStandardPaths>
+#include <QProcess>
 
 extern "C"
 {
@@ -66,17 +67,65 @@
 {
 }
 
-void DesktopProtocol::checkLocalInstall()
+QString DesktopProtocol::ensureDesktopPath()
 {
-#ifndef Q_WS_WIN
     // We can't use QStandardPaths::writableLocation(QStandardPaths::DesktopLocation) here, since it returns the home dir
     // if the desktop folder doesn't exist.
     QString desktopPath = QDesktopServices::storageLocation(QDesktopServices::DesktopLocation);
-    if (desktopPath.isEmpty())
+
+    //If the localized Desktop folder did not exists or point to homeDir.
+    //that means user deleted xdg dirs.
+    //force run xdg-user-dirs-update to restore all xdg folders.
+    /*if (desktopPath.isEmpty() || desktopPath == QDir::homePath()) {
+        QString program = "xdg-user-dirs-update";
+        QStringList arguments;
+        arguments << "--force";
+        
+        QProcess *xdgProcess = new QProcess();
+        xdgProcess->start(program, arguments);
+    }
+    
+    //verify again, avoid 'xdg-user-dirs-update' command not exists or error.
+    desktopPath = QDesktopServices::storageLocation(QDesktopServices::DesktopLocation);*/
+
+    if (desktopPath.isEmpty() || desktopPath == QDir::homePath()) {   
-        desktopPath = QDir::homePath() + "/Desktop";
+        desktopPath = QDir::homePath() + "/" + i18n("Desktop");
+    }
 
     const QDir desktopDir(desktopPath);
-    bool desktopIsEmpty;
+
+    // Create the desktop folder if it doesn't exist
+    if (!desktopDir.exists())
+        ::mkdir(QFile::encodeName(desktopPath), S_IRWXU);
+    
+    return desktopPath;
+}
+
+void DesktopProtocol::checkLocalInstall()
+{
+#ifndef Q_WS_WIN
+    // We can't use QStandardPaths::writableLocation(QStandardPaths::DesktopLocation) here, since it returns the home dir
+    // if the desktop folder doesn't exist.
+    QString desktopPath = ensureDesktopPath();
+
+    QFile dotDirLink(desktopPath + "/.directory");
+    QFile homeLink(desktopPath + "/Home.desktop");
+    QFile trashLink(desktopPath + "/trash.desktop");
+
+    // Always restore the .directory file
+    if(!dotDirLink.exists())
+        QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/directory.desktop"),
+                    desktopPath + "/.directory");
+
+    // Always restore the trash link
+    if(!trashLink.exists())
+        QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/directory.trash"),
+                    desktopPath + "/trash.desktop");
+
+    // Always restore the Home link
+    if(!homeLink.exists())
+        QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/Home.desktop"),
+                    desktopPath + "/Home.desktop");
     bool newRelease;
 
     // Check if we have a new KDE release
@@ -93,25 +142,9 @@
                                 QString::number(KDE::versionRelease());
         cg.writeEntry("Version", version);
         newRelease = true;
-    } else 
-        newRelease = false;
-
-    // Create the desktop folder if it doesn't exist
-    if (!desktopDir.exists()) {
-        ::mkdir(QFile::encodeName(desktopPath), S_IRWXU);
-        desktopIsEmpty = true;
     } else
-        desktopIsEmpty = desktopDir.entryList(QDir::AllEntries | QDir::Hidden | QDir::NoDotAndDotDot).isEmpty();
-
-    if (desktopIsEmpty) {
-        // Copy the .directory file
-        QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/directory.desktop"),
-                    desktopPath + "/.directory");
-
-        // Copy the trash link
-        QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/directory.trash"),
-                    desktopPath + "/trash.desktop");
- 
+        newRelease = false;
+    if(newRelease) { 
         // Copy the desktop links
         const QStringList links = KGlobal::dirs()->findAllResources("data", "kio_desktop/DesktopLinks/*",
                                                                     KStandardDirs::NoDuplicates);
@@ -120,42 +153,16 @@
             if (!file.desktopGroup().readEntry("Hidden", false))
                 QFile::copy(link, desktopPath + link.mid(link.lastIndexOf('/')));
         }
-    } else if (newRelease) {
-        // Update the icon name in the .directory file to the FDO naming spec
-        const QString directoryFile = desktopPath + "/.directory";
-        if (QFile::exists(directoryFile)) {
-             KDesktopFile file(directoryFile);
-             if (file.readIcon() == "desktop")
-                 file.desktopGroup().writeEntry("Icon", "user-desktop");
-        } else
-             QFile::copy(QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kio_desktop/directory.desktop"), directoryFile);
-  
-        // Update the home icon to the FDO naming spec
-        const QString homeLink = desktopPath + "/Home.desktop";
-        if (QFile::exists(homeLink)) {
-            KDesktopFile home(homeLink);
-            const QString icon = home.readIcon();
-            if (icon == "kfm_home" || icon == "folder_home")
-                home.desktopGroup().writeEntry("Icon", "user-home");
-        }
-
-        // Update the trash icon to the FDO naming spec  
-        const QString trashLink = desktopPath + "/trash.desktop";
-        if (QFile::exists(trashLink)) {
-            KDesktopFile trash(trashLink);
-            if (trash.readIcon() == "trashcan_full")
-                trash.desktopGroup().writeEntry("Icon", "user-trash-full");
-            if (trash.desktopGroup().readEntry("EmptyIcon") == "trashcan_empty")
-                trash.desktopGroup().writeEntry("EmptyIcon", "user-trash");
-        }
     }
 #endif
 }
 
 bool DesktopProtocol::rewriteUrl(const QUrl &url, QUrl &newUrl)
 {
+    QString desktopPath = ensureDesktopPath();
+
     newUrl.setScheme("file");
-    newUrl.setPath(QStandardPaths::writableLocation(QStandardPaths::DesktopLocation) + '/' + url.path());
+    newUrl.setPath(desktopPath + '/' + url.path());
     return true;
 }
 
diff -Nur plasma-workspace-5.4.2n/kioslave/desktop/kio_desktop.h plasma-workspace-5.4.2/kioslave/desktop/kio_desktop.h
--- plasma-workspace-5.4.2n/kioslave/desktop/kio_desktop.h	2015-10-14 14:20:25.981049670 +0800
+++ plasma-workspace-5.4.2/kioslave/desktop/kio_desktop.h	2015-10-14 14:52:56.827561891 +0800
@@ -30,6 +30,7 @@
     virtual ~DesktopProtocol();
 
 protected:
+    QString ensureDesktopPath();
     void checkLocalInstall();
     QString desktopFile(KIO::UDSEntry&) const;
     virtual bool rewriteUrl(const QUrl &url, QUrl &newUrl);
