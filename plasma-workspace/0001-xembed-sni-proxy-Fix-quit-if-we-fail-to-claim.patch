diff --git a/xembed-sni-proxy/fdoselectionmanager.h b/xembed-sni-proxy/fdoselectionmanager.h
index 084152e..911df6c 100644
--- a/xembed-sni-proxy/fdoselectionmanager.h
+++ b/xembed-sni-proxy/fdoselectionmanager.h
@@ -47,6 +47,7 @@ private Q_SLOTS:
     void onLostOwnership();
 
 private:
+    void init();
     void addDamageWatch(xcb_window_t client);
     void dock(xcb_window_t embed_win);
     void undock(xcb_window_t client);
-- 
2.6.2

From e042b13ebfdec5a7144b8ffe4b658bfa49c03646 Mon Sep 17 00:00:00 2001
From: Boris Pek <tehnick-8@yandex.ru>
Date: Mon, 16 Nov 2015 03:13:47 +0300
Subject: [PATCH] [xembed-sni-proxy] Fix quit if we fail to claim

---
 xembed-sni-proxy/fdoselectionmanager.cpp | 22 +++++++++++++---------
 xembed-sni-proxy/fdoselectionmanager.h   |  1 +
 2 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/xembed-sni-proxy/fdoselectionmanager.cpp b/xembed-sni-proxy/fdoselectionmanager.cpp
index 02d2660..f236e9c 100644
--- a/xembed-sni-proxy/fdoselectionmanager.cpp
+++ b/xembed-sni-proxy/fdoselectionmanager.cpp
@@ -50,6 +50,18 @@ FdoSelectionManager::FdoSelectionManager():
 {
     qCDebug(SNIPROXY) << "starting";
 
+    //we may end up calling QCoreApplication::quit() in this method, at which point we need the event loop running
+    QTimer::singleShot(0, this, &FdoSelectionManager::init);
+}
+
+FdoSelectionManager::~FdoSelectionManager()
+{
+    qCDebug(SNIPROXY) << "closing";
+    m_selectionOwner->release();
+}
+
+void FdoSelectionManager::init()
+{
     //load damage extension
     xcb_connection_t *c = QX11Info::connection();
     xcb_prefetch_extension_data(c, &xcb_damage_id);
@@ -65,16 +77,10 @@ FdoSelectionManager::FdoSelectionManager():
 
     qApp->installNativeEventFilter(this);
 
-    m_selectionOwner->claim(false);
     connect(m_selectionOwner, &KSelectionOwner::claimedOwnership, this, &FdoSelectionManager::onClaimedOwnership);
     connect(m_selectionOwner, &KSelectionOwner::failedToClaimOwnership, this, &FdoSelectionManager::onFailedToClaimOwnership);
     connect(m_selectionOwner, &KSelectionOwner::lostOwnership, this, &FdoSelectionManager::onLostOwnership);
-}
-
-FdoSelectionManager::~FdoSelectionManager()
-{
-    qCDebug(SNIPROXY) << "closing";
-    m_selectionOwner->release();
+    m_selectionOwner->claim(false);
 }
 
 void FdoSelectionManager::addDamageWatch(xcb_window_t client)
@@ -178,5 +184,3 @@ void FdoSelectionManager::onLostOwnership()
     qCWarning(SNIPROXY) << "lost ownership of Systray Manager";
     qApp->exit(-1);
 }
-
-
